# 使用方法为 com.guoshiyao.rely.line.Line.redisds.getjedis()
# 地址，默认localhost
#home.redis.host=192.168.3.251
# 端口号
#home.redis.port=6379
# 密码
#home.redis.password=123456
# masterName
#home.redis.masterName=mymaster
# 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true
#home.redis.BlockWhenExhausted=true
# 设置的逐出策略类名, 默认DefaultEvictionPolicy(当连接超过最大空闲时间,或连接数超过最大空闲连接数)
#home.redis.evictionPolicyClassName=org.apache.commons.pool2.impl.DefaultEvictionPolicy
# 是否启用pool的jmx管理功能, 默认true
#home.redis.jmxEnabled=true
# 是否启用后进先出, 默认true
#home.redis.lifo=true
# 最大空闲连接数, 默认8个
#home.redis.maxIdle=8
# 最小空闲连接数, 默认0
#home.redis.minIdle=1
# 最大连接数, 默认8个
#home.redis.maxTotal=8
# 获取连接时的最大等待毫秒数(如果设置为阻塞时BlockWhenExhausted),如果超时就抛异常, 小于零:阻塞不确定的时间,  默认-1
#经过框架测试当前值为 -1 时系统启动会报转换异常,建议注释或者值>-1
#home.redis.maxWaitMillis=-1
# 逐出连接的最小空闲时间 默认1800000毫秒(30分钟)
#home.redis.minEvictableIdleTimeMillis=1800000
# 每次逐出检查时 逐出的最大数目 如果为负数就是 : 1/abs(n), 默认3
#home.redis.numTestsPerEvictionRun=3
# 对象空闲多久后逐出, 当空闲时间>该值 且 空闲连接>最大空闲数 时直接逐出,不再根据MinEvictableIdleTimeMillis判断  (默认逐出策略)
#home.redis.SoftMinEvictableIdleTimeMillis=1800000
# 在获取连接的时候检查有效性, 默认false
#home.redis.testOnBorrow=true
# 在空闲时检查有效性, 默认false
#home.redis.testWhileIdle=true
# 逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1
#经过框架测试当前值为 -1 时系统启动会报转换异常,建议注释或者值>-1
#home.redis.timeBetweenEvictionRunsMillis=-1