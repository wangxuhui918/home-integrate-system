package cn.vesan.code.service.impl;

import cn.hutool.core.bean.BeanUtil;
import cn.vesan.code.api.domain.BusinFieldsDomain;
import cn.vesan.code.api.vo.BusinFieldsVo;
import cn.vesan.code.mapper.BusinFieldsMapper;
import cn.vesan.code.service.BusinFieldsService;
import com.guoshiyao.rely.mybatis.starter.mybatis.other.base.BaseBiz;
import org.springframework.stereotype.Service;

import javax.annotation.Resource;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

/**
 * 业务明细(BusinFields)表服务实现类
 *
 * @author 医惠科技有限公司
 * @since 2022-03-18 15:19:10
 */
@Service("businFieldsService")
public class BusinFieldsServiceImpl extends BaseBiz<BusinFieldsMapper, BusinFieldsDomain> implements BusinFieldsService {
    @Resource
    private BusinFieldsMapper businFieldsMapper;

    /**
     * 通过ID查询单条数据
     *
     * @param fieldId 主键
     * @return 实例对象
     */
    @Override
    public BusinFieldsVo queryById(Long fieldId) {
        BusinFieldsVo vo = new BusinFieldsVo();
        BeanUtil.copyProperties(this.businFieldsMapper.queryById(fieldId), vo);
        return vo;
    }

    /**
     * 分页查询
     *
     * @param businFields 筛选条件
     * @param pageRequest 分页对象
     * @return 查询结果
     */
    @Override
    public HashMap<String, Object> queryByPage(BusinFieldsVo businFields, cn.hutool.db.Page pageRequest) {
        BusinFieldsDomain domain = new BusinFieldsDomain();
        HashMap<String, Object> pageData = new HashMap<>();
        List<BusinFieldsVo> returnlist = new ArrayList<>();
        {
            BeanUtil.copyProperties(businFields, domain);
            pageData.put("pageSize", pageRequest.getPageSize());
            pageData.put("pageNumber", pageRequest.getPageNumber()-1);
            pageData.putAll(BeanUtil.beanToMap(domain));
        }
        {
            returnlist = BeanUtil.copyToList(this.businFieldsMapper.queryAllByLimit(pageData), BusinFieldsVo.class);
            pageData.put("total", this.businFieldsMapper.count(domain));
            pageData.put("data", returnlist);
        }
        return pageData;
    }


    /**
     * 新增数据
     *
     * @param businFields 实例对象
     * @return 实例对象
     */
    @Override
    public int insert(BusinFieldsVo businFields) {
        BusinFieldsDomain domain = new BusinFieldsDomain();
        BeanUtil.copyProperties(businFields, domain);
        return this.businFieldsMapper.insert(domain);
    }

    /**
     * 修改数据
     *
     * @param businFields 实例对象
     * @return 实例对象
     */
    @Override
    public BusinFieldsVo update(BusinFieldsVo businFields) {
        BusinFieldsDomain domain = new BusinFieldsDomain();
        BeanUtil.copyProperties(businFields, domain);
        this.businFieldsMapper.update(domain);
        return this.queryById(domain.getFieldId());

    }

    /**
     * 通过主键删除数据
     *
     * @param fieldId 主键
     * @return 是否成功
     */
    @Override
    public boolean deleteById(Long fieldId) {
        return this.businFieldsMapper.deleteById(fieldId) > 0;
    }

    //-----------------------以上为默认方法,新方法请写在下面------------------------//

}



注:
1. 默认规则为 src/../service/impl/**/*Service.java
2. Vo和Domain分别对应表单对象以及数据库持久对象,可在此层进行转换
3. 建议相应的公共业务逻辑块可单独拆分service