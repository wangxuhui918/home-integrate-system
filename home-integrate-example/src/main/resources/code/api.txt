package cn.vesan.code.api;

import cn.hutool.core.bean.BeanUtil;
import cn.hutool.db.Page;
import cn.vesan.code.api.domain.BusinFieldsDomain;
import cn.vesan.code.api.vo.BusinFieldsVo;
import cn.vesan.code.service.BusinFieldsService;
import com.guoshiyao.rely.coreannotation.rule.RuleAnnotationApi;
import com.guoshiyao.rely.outgoing.InputParamRe;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import javax.annotation.Resource;

/**
 * 业务明细(BusinFields)控制层
 *
 * @author 医惠科技有限公司
 * @since 2022-03-18 15:19:11
 */
@RuleAnnotationApi
@Controller
@Api(tags = "业务明细(BusinFields)控制层")
public class BusinFieldsController {
    /**
     * 服务对象
     */
    @Resource
    private BusinFieldsService businFieldsService;

    /**
     * 分页查询
     *
     * @param input 筛选条件+分页对象
     * @return 查询结果
     */
    @RequestMapping(value = "/businFields/queryByPage", method = {RequestMethod.POST})
    @ApiOperation(value = "分页查询")
    @ResponseBody
    public Object queryByPage(@RequestBody InputParamRe<BusinFieldsVo> input) {
        return this.businFieldsService.queryByPage(input.getInputData(), new Page(Integer.parseInt(input.getPageNum()), Integer.parseInt(input.getPageSize())));
    }

    /**
     * 通过主键查询单条数据
     *
     * @param input 主键
     * @return 单条数据
     */
    @RequestMapping(value = "/businFields/queryById", method = {RequestMethod.POST})
    @ApiOperation(value = "按照主键查询")
    @ResponseBody
    public Object queryById(@RequestBody InputParamRe<BusinFieldsVo> input) {
        BusinFieldsDomain info = new BusinFieldsDomain();
        BeanUtil.copyProperties(input.getInputData(), info);
        return this.businFieldsService.queryById(info.getFieldId());
    }

    /**
     * 新增数据
     *
     * @param input 实体
     * @return 新增结果
     */
    @RequestMapping(value = "/businFields/add", method = {RequestMethod.POST})
    @ApiOperation(value = "添加")
    @ResponseBody
    @PostMapping
    public Object add(@RequestBody InputParamRe<BusinFieldsVo> input) {
        return this.businFieldsService.insert(input.getInputData());
    }

    /**
     * 编辑数据
     *
     * @param input 实体
     * @return 编辑结果
     */
    @RequestMapping(value = "/businFields/edit", method = {RequestMethod.POST})
    @ApiOperation(value = "编辑")
    @ResponseBody
    @PutMapping
    public Object edit(@RequestBody InputParamRe<BusinFieldsVo> input) {
        return this.businFieldsService.update(input.getInputData());
    }

    /**
     * 删除数据
     *
     * @param v 主键
     * @return 删除是否成功
     */
    @RequestMapping(value = "/businFields/deleteById", method = {RequestMethod.POST})
    @ApiOperation(value = "按照主键删除")
    @ResponseBody
    public Object deleteById(@RequestBody InputParamRe<BusinFieldsVo> input) {
        BusinFieldsDomain info = new BusinFieldsDomain();
        BeanUtil.copyProperties(input.getInputData(), info);
        return this.businFieldsService.deleteById(info.getFieldId());
    }
    //-----------------------以上为默认方法,新方法请写在下面------------------------//

}




注:
1. 默认规则为 src/../api/**/*Controller/Dubbo.java
2. 该层主要针对Vo层进行参数校验,数据校验,并调用Service逻辑块